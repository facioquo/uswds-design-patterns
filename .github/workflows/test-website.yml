name: Test website

on:
  push:
    branches: [ main, add-es-linting ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm test -- --coverage --runInBand

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage
          path: coverage

      - name: Generate summary
        if: always()
        run: |
          echo "# Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f coverage/coverage-summary.json ]; then
            LINES=$(node -e "console.log(require('./coverage/coverage-summary.json').total.lines.pct)")
            FUNCS=$(node -e "console.log(require('./coverage/coverage-summary.json').total.functions.pct)")
            BRANCHES=$(node -e "console.log(require('./coverage/coverage-summary.json').total.branches.pct)")
            STMTS=$(node -e "console.log(require('./coverage/coverage-summary.json').total.statements.pct)")
            echo "- Lines: ${LINES}%" >> $GITHUB_STEP_SUMMARY
            echo "- Functions: ${FUNCS}%" >> $GITHUB_STEP_SUMMARY
            echo "- Branches: ${BRANCHES}%" >> $GITHUB_STEP_SUMMARY
            echo "- Statements: ${STMTS}%" >> $GITHUB_STEP_SUMMARY
          else
            echo "Coverage summary not found." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Playwright install
        run: npx playwright install --with-deps

      - name: Run Playwright tests (headless)
        run: npx playwright test

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
